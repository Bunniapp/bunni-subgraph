specVersion: 0.0.6
{{#graft}}
features:
  - grafting
graft:
  base: {{graft.base}}
  block: {{graft.block}}
{{/graft}}
schema:
  file: ./schema.graphql
dataSources:
  {{#BunniHub}}
  - kind: ethereum/contract
    name: BunniHub
    network: {{ network }}
    source:
      address: '{{ BunniHub.address }}'
      abi: BunniHub
      startBlock: {{ BunniHub.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Bunni
        - BunniToken
        - Pool
        - Token
        - User
        - UserPosition
      abis:
        - name: BunniHub
          file: ./abis/BunniHub.json
        - name: BunniLens
          file: ./abis/BunniLens.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: UniswapV3Pool
          file: ./abis/UniswapV3Pool.json
      eventHandlers:
        - event: Compound(indexed address,indexed bytes32,uint128,uint256,uint256)
          handler: handleCompound
        - event: Deposit(indexed address,indexed address,indexed bytes32,uint128,uint256,uint256,uint256)
          handler: handleDeposit
        - event: NewBunni(indexed address,indexed bytes32,indexed address,int24,int24)
          handler: handleNewBunni
        - event: PayProtocolFee(uint256,uint256)
          handler: handlePayProtocolFee
        - event: SetProtocolFee(uint256)
          handler: handleSetProtocolFee
        - event: Withdraw(indexed address,indexed address,indexed bytes32,uint128,uint256,uint256,uint256)
          handler: handleWithdraw
      file: ./src/mappings/BunniHub.ts
  {{/BunniHub}}
  {{#LiquidityGaugeFactory}}
  - kind: ethereum/contract
    name: LiquidityGaugeFactory
    network: {{ network }}
    source:
      address: '{{ LiquidityGaugeFactory.address }}'
      abi: LiquidityGaugeFactory
      startBlock: {{ LiquidityGaugeFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - BunniToken
        - Gauge
      abis:
        - name: LiquidityGaugeFactory
          file: ./abis/LiquidityGaugeFactory.json
        - name: LiquidityGauge
          file: ./abis/LiquidityGauge.json
        - name: BunniToken
          file: ./abis/BunniToken.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: GaugeCreated(indexed address)
          handler: handleGaugeCreated
      file: ./src/mappings/LiquidityGaugeFactory.ts
  {{/LiquidityGaugeFactory}}
  {{#RootGaugeFactory}}
  - kind: ethereum/contract
    name: RootGaugeFactory
    network: {{ network }}
    source:
      address: '{{ RootGaugeFactory.address }}'
      abi: RootGaugeFactory
      startBlock: {{ RootGaugeFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Gauge
      abis:
        - name: RootGaugeFactory
          file: ./abis/RootGaugeFactory.json
      eventHandlers:
        # - event: BridgerUpdated(indexed uint256,address,address)
        #   handler: handleBridgerUpdated
        - event: DeployedGauge(indexed address,indexed uint256,(address,int24,int24),address)
          handler: handleDeployedRootGauge
        # - event: TransferOwnership(address,address)
        #   handler: handleTransferOwnership
        # - event: UpdateImplementation(address,address)
        #   handler: handleUpdateImplementation
      file: ./src/mappings/LiquidityGaugeFactory.ts
  {{/RootGaugeFactory}}
  {{#ChildGaugeFactory}}
  - kind: ethereum/contract
    name: ChildGaugeFactory
    network: {{ network }}
    source:
      address: '{{ ChildGaugeFactory.address }}'
      abi: ChildGaugeFactory
      startBlock: {{ ChildGaugeFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - BunniToken
        - Gauge
        - User
        - UserPosition
      abis:
        - name: ChildGaugeFactory
          file: ./abis/ChildGaugeFactory.json
        - name: ChildGauge
          file: ./abis/ChildGauge.json
        - name: BunniToken
          file: ./abis/BunniToken.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: DeployedGauge(indexed address,(address,int24,int24),address)
          handler: handleDeployedChildGauge
        - event: Minted(indexed address,indexed address,uint256)
          handler: handleMinted
        # - event: TransferOwnership(address,address)
        #   handler: handleTransferOwnership
        # - event: UpdateImplementation(address,address)
        #   handler: handleUpdateImplementation
        # - event: UpdateVotingEscrow(address,address)
        #   handler: handleUpdateVotingEscrow
      file: ./src/mappings/LiquidityGaugeFactory.ts
  {{/ChildGaugeFactory}}
  {{#GaugeController}}
  - kind: ethereum/contract
    name: GaugeController
    network: {{ network }}
    source:
      address: '{{ GaugeController.address }}'
      abi: GaugeController
      startBlock: {{ GaugeController.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Gauge
        - Vote
      abis:
        - name: GaugeController
          file: ./abis/GaugeController.json
      eventHandlers:
        # - event: AddType(string,int128)
        #   handler: handleAddType
        # - event: NewAdmin(address)
        #   handler: handleNewAdmin
        - event: NewGauge(address,int128,uint256)
          handler: handleNewGauge
        # - event: NewGaugeWeight(address,uint256,uint256,uint256)
        #   handler: handleNewGaugeWeight
        # - event: NewPendingAdmin(address)
        #   handler: handleNewPendingAdmin
        # - event: NewTypeWeight(int128,uint256,uint256,uint256)
        #   handler: handleNewTypeWeight
        - event: VoteForGauge(uint256,address,address,uint256)
          handler: handleVoteForGauge
      file: ./src/mappings/GaugeController.ts
  {{/GaugeController}}
  {{#VotingEscrow}}
  - kind: ethereum/contract
    name: VotingEscrow
    network: {{ network }}
    source:
      address: '{{ VotingEscrow.address }}'
      abi: VotingEscrow
      startBlock: {{ VotingEscrow.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - VotingLock
      abis:
        - name: VotingEscrow
          file: ./abis/VotingEscrow.json
      eventHandlers:
        - event: Deposit(indexed address,uint256,indexed uint256,int128,uint256)
          handler: handleDeposit
        - event: Withdraw(indexed address,uint256,uint256)
          handler: handleWithdraw
        # - event: Supply(uint256,uint256)
        #   handler: handleSupply
        # - event: NewPendingAdmin(address)
        #   handler: handleNewPendingAdmin
        # - event: NewAdmin(address)
        #   handler: handleNewAdmin
      file: ./src/mappings/VotingEscrow.ts
  {{/VotingEscrow}}
  {{#TokenAdmin}}
  - kind: ethereum/contract
    name: TokenAdmin
    network: {{ network }}
    source:
      address: '{{ TokenAdmin.address }}'
      abi: TokenAdmin
      startBlock: {{ TokenAdmin.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Bunni
      abis:
        - name: TokenAdmin
          file: ./abis/TokenAdmin.json
      eventHandlers:
        - event: MiningParametersUpdated(uint256,uint256)
          handler: handleMiningParametersUpdated
      file: ./src/mappings/TokenAdmin.ts
  {{/TokenAdmin}}
  {{#OptionsToken}}
  - kind: ethereum/contract
    name: OptionsToken
    network: {{ network }}
    source:
      address: '{{ OptionsToken.address }}'
      abi: OptionsToken
      startBlock: {{ OptionsToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Bunni
      abis:
        - name: OptionsToken
          file: ./abis/OptionsToken.json
      eventHandlers:
        - event: Exercise(indexed address,indexed address,uint256,uint256)
          handler: handleExercise
        - event: SetOracle(indexed address)
          handler: handleSetOracle
        - event: SetTreasury(indexed address)
          handler: handleSetTreasury
      file: ./src/mappings/OptionsToken.ts
  {{/OptionsToken}}
  {{#BalancerOracle}}
  - kind: ethereum/contract
    name: BalancerOracle
    network: {{ network }}
    source:
      address: '{{ BalancerOracle.address }}'
      abi: BalancerOracle
      startBlock: {{ BalancerOracle.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Bunni
      abis:
        - name: BalancerOracle
          file: ./abis/BalancerOracle.json
      eventHandlers:
        - event: SetParams(uint16,uint56,uint56,uint128)
          handler: handleSetParams
      file: ./src/mappings/OptionsToken.ts
  {{/BalancerOracle}}
  {{#BunniBribe}}
  - kind: ethereum/contract
    name: BunniBribe
    network: {{ network }}
    source:
      address: '{{ BunniBribe.address }}'
      abi: BunniBribe
      startBlock: {{ BunniBribe.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Gauge
        - Bribe
        - Token
      abis:
        - name: BunniBribe
          file: ./abis/BunniBribe.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: DepositBribe(indexed bytes32,indexed address,uint256,bytes32,bytes32,indexed address)
          handler: handleDepositBribe
      file: ./src/mappings/BunniBribe.ts
  {{/BunniBribe}}
  {{#BribeVault}}
  - kind: ethereum/contract
    name: BribeVault
    network: {{ network }}
    source:
      address: '{{ BribeVault.address }}'
      abi: BribeVault
      startBlock: {{ BribeVault.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Gauge
        - Bribe
        - Token
      abis:
        - name: BribeVault
          file: ./abis/BribeVault.json
        - name: BribeMarket
          file: ./abis/BribeMarket.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: DepositBribe(indexed address,indexed bytes32,indexed uint256,address,address,uint256,uint256,uint256,uint256)
          handler: handleDepositBribeV2
      file: ./src/mappings/BunniBribe.ts
  {{/BribeVault}}
  {{#QuestBoard}}
  - kind: ethereum/contract
    name: QuestBoard
    network: {{ network }}
    source:
      address: '{{ QuestBoard.address }}'
      abi: QuestBoard
      startBlock: {{ QuestBoard.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Gauge
        - Quest
        - Token
      abis:
        - name: QuestBoard
          file: ./abis/QuestBoard.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: IncreasedQuestDuration(indexed uint256,uint256,uint256)
          handler: handleIncreasedQuestDuration
        - event: IncreasedQuestObjective(indexed uint256,indexed uint256,uint256,uint256)
          handler: handleIncreasedQuestObjective
        - event: IncreasedQuestReward(indexed uint256,indexed uint256,uint256,uint256)
          handler: handleIncreasedQuestReward
        - event: NewQuest(indexed uint256,indexed address,indexed address,address,uint48,uint256,uint256,uint256)
          handler: handleNewQuest
      file: ./src/mappings/QuestBoard.ts
  {{/QuestBoard}}
  {{#VoteMarket}}
  - kind: ethereum/contract
    name: VoteMarket
    network: {{ network }}
    source:
      address: '{{ VoteMarket.address }}'
      abi: VoteMarket
      startBlock: {{ VoteMarket.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Bounty
        - Gauge
        - Token
      abis:
        - name: VoteMarket
          file: ./abis/VoteMarket.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: BountyCreated(indexed uint256,indexed address,address,address,uint8,uint256,uint256,uint256,bool)
          handler: handleBountyCreated
        - event: BountyDurationIncrease(uint256,uint8,uint256,uint256)
          handler: handleBountyDurationIncrease
      file: ./src/mappings/VoteMarket.ts
  {{/VoteMarket}}
  {{#Minter}}
  - kind: ethereum/contract
    name: Minter
    network: {{ network }}
    source:
      address: '{{ Minter.address }}'
      abi: Minter
      startBlock: {{ Minter.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Gauge
        - User
        - UserPosition
      abis:
        - name: Minter
          file: ./abis/Minter.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Minted(indexed address,address,uint256)
          handler: handleMinted
      file: ./src/mappings/OptionsToken.ts
  {{/Minter}}
  {{#Beacon}}
  - kind: ethereum/contract
    name: Beacon
    network: {{ network }}
    source:
      address: '{{ Beacon.address }}'
      abi: Beacon
      startBlock: {{ Beacon.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - VotingLock
      abis:
        - name: Beacon
          file: ./abis/Beacon.json
      eventHandlers:
        - event: BroadcastVeBalance(indexed address,indexed uint256)
          handler: handleBroadcastVeBalance
      file: ./src/mappings/VotingEscrow.ts
  {{/Beacon}}
templates:
  - kind: ethereum/contract
    name: BunniToken
    network: {{ network }}
    source:
      abi: BunniToken
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - BunniToken
      abis:
        - name: BunniToken
          file: ./abis/BunniToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        # - event: Approval(indexed address,indexed address,uint256)
        #   handler: handleApproval
      file: ./src/mappings/BunniToken.ts
  - kind: ethereum/contract
    name: LiquidityGauge
    network: {{ network }}
    source:
      abi: LiquidityGauge
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Gauge
        - Token
        - RewardToken
        - UserPosition
      abis:
        - name: LiquidityGauge
          file: ./abis/LiquidityGauge.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Deposit(indexed address,uint256)
          handler: handleDeposit
        - event: Withdraw(indexed address,uint256)
          handler: handleWithdraw
        - event: UpdateLiquidityLimit(indexed address,uint256,uint256,uint256,uint256)
          handler: handleUpdateLiquidityLimit
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        # - event: Approval(indexed address,indexed address,uint256)
        #   handler: handleApproval
        - event: RewardDistributorUpdated(indexed address,address)
          handler: handleRewardDistributorUpdated
        - event: RelativeWeightCapChanged(uint256)
          handler: handleRelativeWeightCapChanged
        # - event: NewPendingAdmin(address)
        #   handler: handleNewPendingAdmin
        # - event: NewAdmin(address)
        #   handler: handleNewAdmin
        - event: NewTokenlessProduction(uint8)
          handler: handleNewTokenlessProduction
      file: ./src/mappings/LiquidityGauge.ts
  - kind: ethereum/contract
    name: RootGauge
    network: {{ network }}
    source:
      abi: RootGauge
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Gauge
      abis:
        - name: RootGauge
          file: ./abis/RootGauge.json
      eventHandlers:
        - event: RelativeWeightCapChanged(uint256)
          handler: handleRelativeWeightCapChanged
        # - event: SetKilled(bool)
        #   handler: handleSetKilled
      file: ./src/mappings/RootGauge.ts
  - kind: ethereum/contract
    name: ChildGauge
    network: {{ network }}
    source:
      abi: ChildGauge
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Gauge
        - Token
        - RewardToken
        - UserPosition
      abis:
        - name: ChildGauge
          file: ./abis/ChildGauge.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: AddReward(indexed address)
          handler: handleAddReward
        # - event: Approval(indexed address,indexed address,uint256)
        #   handler: handleApproval
        # - event: ClaimRewards(indexed address,indexed address)
        #   handler: handleClaimRewards
        - event: Deposit(indexed address,uint256)
          handler: handleDeposit
        # - event: DepositRewardToken(indexed address,uint256)
        #   handler: handleDepositRewardToken
        # - event: Kick(indexed address)
        #   handler: handleKick
        # - event: NewGaugeState(indexed uint8)
        #   handler: handleNewGaugeState
        # - event: NewManager(indexed address)
        #   handler: handleNewManager
        - event: NewTokenlessProduction(indexed uint8)
          handler: handleNewTokenlessProduction
        - event: SetRewardDistributor(indexed address,indexed address)
          handler: handleSetRewardDistributor
        # - event: SetRewardsReceiver(indexed address,indexed address)
        #   handler: handleSetRewardsReceiver
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: UpdateLiquidityLimit(indexed address,uint256,uint256,uint256,uint256)
          handler: handleUpdateLiquidityLimit
        - event: Withdraw(indexed address,uint256)
          handler: handleWithdraw
      file: ./src/mappings/ChildGauge.ts
  - kind: ethereum/contract
    name: UniswapV3Pool
    network: {{ network }}
    source:
      abi: UniswapV3Pool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - BunniToken
        - Pool
        - Token
      abis:
        - name: UniswapV3Pool
          file: ./abis/UniswapV3Pool.json
        - name: BunniLens
          file: ./abis/BunniLens.json
      eventHandlers:
        - event: Mint(address,indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleMint
        - event: Burn(indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleBurn
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleSwap
      file: ./src/mappings/UniswapV3Pool.ts