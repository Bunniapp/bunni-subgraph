// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Compound extends ethereum.Event {
  get params(): Compound__Params {
    return new Compound__Params(this);
  }
}

export class Compound__Params {
  _event: Compound;

  constructor(event: Compound) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get bunniKeyHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get liquidity(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get bunniKeyHash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get liquidity(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get shares(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class NewBunni extends ethereum.Event {
  get params(): NewBunni__Params {
    return new NewBunni__Params(this);
  }
}

export class NewBunni__Params {
  _event: NewBunni;

  constructor(event: NewBunni) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get bunniKeyHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get pool(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tickLower(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get tickUpper(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PayProtocolFee extends ethereum.Event {
  get params(): PayProtocolFee__Params {
    return new PayProtocolFee__Params(this);
  }
}

export class PayProtocolFee__Params {
  _event: PayProtocolFee;

  constructor(event: PayProtocolFee) {
    this._event = event;
  }

  get amount0(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetProtocolFee extends ethereum.Event {
  get params(): SetProtocolFee__Params {
    return new SetProtocolFee__Params(this);
  }
}

export class SetProtocolFee__Params {
  _event: SetProtocolFee;

  constructor(event: SetProtocolFee) {
    this._event = event;
  }

  get newProtocolFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get bunniKeyHash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get liquidity(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get shares(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class BunniHub__compoundResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class BunniHub__compoundInputKeyStruct extends ethereum.Tuple {
  get pool(): Address {
    return this[0].toAddress();
  }

  get tickLower(): i32 {
    return this[1].toI32();
  }

  get tickUpper(): i32 {
    return this[2].toI32();
  }
}

export class BunniHub__deployBunniTokenInputKeyStruct extends ethereum.Tuple {
  get pool(): Address {
    return this[0].toAddress();
  }

  get tickLower(): i32 {
    return this[1].toI32();
  }

  get tickUpper(): i32 {
    return this[2].toI32();
  }
}

export class BunniHub__getBunniTokenInputKeyStruct extends ethereum.Tuple {
  get pool(): Address {
    return this[0].toAddress();
  }

  get tickLower(): i32 {
    return this[1].toI32();
  }

  get tickUpper(): i32 {
    return this[2].toI32();
  }
}

export class BunniHub__withdrawResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class BunniHub__withdrawInputParamsStruct extends ethereum.Tuple {
  get key(): BunniHub__withdrawInputParamsKeyStruct {
    return changetype<BunniHub__withdrawInputParamsKeyStruct>(
      this[0].toTuple()
    );
  }

  get recipient(): Address {
    return this[1].toAddress();
  }

  get shares(): BigInt {
    return this[2].toBigInt();
  }

  get amount0Min(): BigInt {
    return this[3].toBigInt();
  }

  get amount1Min(): BigInt {
    return this[4].toBigInt();
  }

  get deadline(): BigInt {
    return this[5].toBigInt();
  }
}

export class BunniHub__withdrawInputParamsKeyStruct extends ethereum.Tuple {
  get pool(): Address {
    return this[0].toAddress();
  }

  get tickLower(): i32 {
    return this[1].toI32();
  }

  get tickUpper(): i32 {
    return this[2].toI32();
  }
}

export class BunniHub extends ethereum.SmartContract {
  static bind(address: Address): BunniHub {
    return new BunniHub("BunniHub", address);
  }

  WETH9(): Address {
    let result = super.call("WETH9", "WETH9():(address)", []);

    return result[0].toAddress();
  }

  try_WETH9(): ethereum.CallResult<Address> {
    let result = super.tryCall("WETH9", "WETH9():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  compound(key: BunniHub__compoundInputKeyStruct): BunniHub__compoundResult {
    let result = super.call(
      "compound",
      "compound((address,int24,int24)):(uint128,uint256,uint256)",
      [ethereum.Value.fromTuple(key)]
    );

    return new BunniHub__compoundResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_compound(
    key: BunniHub__compoundInputKeyStruct
  ): ethereum.CallResult<BunniHub__compoundResult> {
    let result = super.tryCall(
      "compound",
      "compound((address,int24,int24)):(uint128,uint256,uint256)",
      [ethereum.Value.fromTuple(key)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BunniHub__compoundResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  deployBunniToken(key: BunniHub__deployBunniTokenInputKeyStruct): Address {
    let result = super.call(
      "deployBunniToken",
      "deployBunniToken((address,int24,int24)):(address)",
      [ethereum.Value.fromTuple(key)]
    );

    return result[0].toAddress();
  }

  try_deployBunniToken(
    key: BunniHub__deployBunniTokenInputKeyStruct
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployBunniToken",
      "deployBunniToken((address,int24,int24)):(address)",
      [ethereum.Value.fromTuple(key)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  factory(): Address {
    let result = super.call("factory", "factory():(address)", []);

    return result[0].toAddress();
  }

  try_factory(): ethereum.CallResult<Address> {
    let result = super.tryCall("factory", "factory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getBunniToken(key: BunniHub__getBunniTokenInputKeyStruct): Address {
    let result = super.call(
      "getBunniToken",
      "getBunniToken((address,int24,int24)):(address)",
      [ethereum.Value.fromTuple(key)]
    );

    return result[0].toAddress();
  }

  try_getBunniToken(
    key: BunniHub__getBunniTokenInputKeyStruct
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getBunniToken",
      "getBunniToken((address,int24,int24)):(address)",
      [ethereum.Value.fromTuple(key)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFee(): BigInt {
    let result = super.call("protocolFee", "protocolFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_protocolFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("protocolFee", "protocolFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdraw(
    params: BunniHub__withdrawInputParamsStruct
  ): BunniHub__withdrawResult {
    let result = super.call(
      "withdraw",
      "withdraw(((address,int24,int24),address,uint256,uint256,uint256,uint256)):(uint128,uint256,uint256)",
      [ethereum.Value.fromTuple(params)]
    );

    return new BunniHub__withdrawResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_withdraw(
    params: BunniHub__withdrawInputParamsStruct
  ): ethereum.CallResult<BunniHub__withdrawResult> {
    let result = super.tryCall(
      "withdraw",
      "withdraw(((address,int24,int24),address,uint256,uint256,uint256,uint256)):(uint128,uint256,uint256)",
      [ethereum.Value.fromTuple(params)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BunniHub__withdrawResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get factory_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get WETH9_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get protocolFee_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CompoundCall extends ethereum.Call {
  get inputs(): CompoundCall__Inputs {
    return new CompoundCall__Inputs(this);
  }

  get outputs(): CompoundCall__Outputs {
    return new CompoundCall__Outputs(this);
  }
}

export class CompoundCall__Inputs {
  _call: CompoundCall;

  constructor(call: CompoundCall) {
    this._call = call;
  }

  get key(): CompoundCallKeyStruct {
    return changetype<CompoundCallKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CompoundCall__Outputs {
  _call: CompoundCall;

  constructor(call: CompoundCall) {
    this._call = call;
  }

  get addedLiquidity(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class CompoundCallKeyStruct extends ethereum.Tuple {
  get pool(): Address {
    return this[0].toAddress();
  }

  get tickLower(): i32 {
    return this[1].toI32();
  }

  get tickUpper(): i32 {
    return this[2].toI32();
  }
}

export class DeployBunniTokenCall extends ethereum.Call {
  get inputs(): DeployBunniTokenCall__Inputs {
    return new DeployBunniTokenCall__Inputs(this);
  }

  get outputs(): DeployBunniTokenCall__Outputs {
    return new DeployBunniTokenCall__Outputs(this);
  }
}

export class DeployBunniTokenCall__Inputs {
  _call: DeployBunniTokenCall;

  constructor(call: DeployBunniTokenCall) {
    this._call = call;
  }

  get key(): DeployBunniTokenCallKeyStruct {
    return changetype<DeployBunniTokenCallKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class DeployBunniTokenCall__Outputs {
  _call: DeployBunniTokenCall;

  constructor(call: DeployBunniTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class DeployBunniTokenCallKeyStruct extends ethereum.Tuple {
  get pool(): Address {
    return this[0].toAddress();
  }

  get tickLower(): i32 {
    return this[1].toI32();
  }

  get tickUpper(): i32 {
    return this[2].toI32();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get params(): DepositCallParamsStruct {
    return changetype<DepositCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get shares(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get addedLiquidity(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._call.outputValues[3].value.toBigInt();
  }
}

export class DepositCallParamsStruct extends ethereum.Tuple {
  get key(): DepositCallParamsKeyStruct {
    return changetype<DepositCallParamsKeyStruct>(this[0].toTuple());
  }

  get amount0Desired(): BigInt {
    return this[1].toBigInt();
  }

  get amount1Desired(): BigInt {
    return this[2].toBigInt();
  }

  get amount0Min(): BigInt {
    return this[3].toBigInt();
  }

  get amount1Min(): BigInt {
    return this[4].toBigInt();
  }

  get deadline(): BigInt {
    return this[5].toBigInt();
  }

  get recipient(): Address {
    return this[6].toAddress();
  }
}

export class DepositCallParamsKeyStruct extends ethereum.Tuple {
  get pool(): Address {
    return this[0].toAddress();
  }

  get tickLower(): i32 {
    return this[1].toI32();
  }

  get tickUpper(): i32 {
    return this[2].toI32();
  }
}

export class MulticallCall extends ethereum.Call {
  get inputs(): MulticallCall__Inputs {
    return new MulticallCall__Inputs(this);
  }

  get outputs(): MulticallCall__Outputs {
    return new MulticallCall__Outputs(this);
  }
}

export class MulticallCall__Inputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class MulticallCall__Outputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get results(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class RefundETHCall extends ethereum.Call {
  get inputs(): RefundETHCall__Inputs {
    return new RefundETHCall__Inputs(this);
  }

  get outputs(): RefundETHCall__Outputs {
    return new RefundETHCall__Outputs(this);
  }
}

export class RefundETHCall__Inputs {
  _call: RefundETHCall;

  constructor(call: RefundETHCall) {
    this._call = call;
  }
}

export class RefundETHCall__Outputs {
  _call: RefundETHCall;

  constructor(call: RefundETHCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SelfPermitCall extends ethereum.Call {
  get inputs(): SelfPermitCall__Inputs {
    return new SelfPermitCall__Inputs(this);
  }

  get outputs(): SelfPermitCall__Outputs {
    return new SelfPermitCall__Outputs(this);
  }
}

export class SelfPermitCall__Inputs {
  _call: SelfPermitCall;

  constructor(call: SelfPermitCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class SelfPermitCall__Outputs {
  _call: SelfPermitCall;

  constructor(call: SelfPermitCall) {
    this._call = call;
  }
}

export class SelfPermitAllowedCall extends ethereum.Call {
  get inputs(): SelfPermitAllowedCall__Inputs {
    return new SelfPermitAllowedCall__Inputs(this);
  }

  get outputs(): SelfPermitAllowedCall__Outputs {
    return new SelfPermitAllowedCall__Outputs(this);
  }
}

export class SelfPermitAllowedCall__Inputs {
  _call: SelfPermitAllowedCall;

  constructor(call: SelfPermitAllowedCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get nonce(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class SelfPermitAllowedCall__Outputs {
  _call: SelfPermitAllowedCall;

  constructor(call: SelfPermitAllowedCall) {
    this._call = call;
  }
}

export class SelfPermitAllowedIfNecessaryCall extends ethereum.Call {
  get inputs(): SelfPermitAllowedIfNecessaryCall__Inputs {
    return new SelfPermitAllowedIfNecessaryCall__Inputs(this);
  }

  get outputs(): SelfPermitAllowedIfNecessaryCall__Outputs {
    return new SelfPermitAllowedIfNecessaryCall__Outputs(this);
  }
}

export class SelfPermitAllowedIfNecessaryCall__Inputs {
  _call: SelfPermitAllowedIfNecessaryCall;

  constructor(call: SelfPermitAllowedIfNecessaryCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get nonce(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class SelfPermitAllowedIfNecessaryCall__Outputs {
  _call: SelfPermitAllowedIfNecessaryCall;

  constructor(call: SelfPermitAllowedIfNecessaryCall) {
    this._call = call;
  }
}

export class SelfPermitIfNecessaryCall extends ethereum.Call {
  get inputs(): SelfPermitIfNecessaryCall__Inputs {
    return new SelfPermitIfNecessaryCall__Inputs(this);
  }

  get outputs(): SelfPermitIfNecessaryCall__Outputs {
    return new SelfPermitIfNecessaryCall__Outputs(this);
  }
}

export class SelfPermitIfNecessaryCall__Inputs {
  _call: SelfPermitIfNecessaryCall;

  constructor(call: SelfPermitIfNecessaryCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class SelfPermitIfNecessaryCall__Outputs {
  _call: SelfPermitIfNecessaryCall;

  constructor(call: SelfPermitIfNecessaryCall) {
    this._call = call;
  }
}

export class SetProtocolFeeCall extends ethereum.Call {
  get inputs(): SetProtocolFeeCall__Inputs {
    return new SetProtocolFeeCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeCall__Outputs {
    return new SetProtocolFeeCall__Outputs(this);
  }
}

export class SetProtocolFeeCall__Inputs {
  _call: SetProtocolFeeCall;

  constructor(call: SetProtocolFeeCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProtocolFeeCall__Outputs {
  _call: SetProtocolFeeCall;

  constructor(call: SetProtocolFeeCall) {
    this._call = call;
  }
}

export class SweepTokenCall extends ethereum.Call {
  get inputs(): SweepTokenCall__Inputs {
    return new SweepTokenCall__Inputs(this);
  }

  get outputs(): SweepTokenCall__Outputs {
    return new SweepTokenCall__Outputs(this);
  }
}

export class SweepTokenCall__Inputs {
  _call: SweepTokenCall;

  constructor(call: SweepTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amountMinimum(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SweepTokenCall__Outputs {
  _call: SweepTokenCall;

  constructor(call: SweepTokenCall) {
    this._call = call;
  }
}

export class SweepTokensCall extends ethereum.Call {
  get inputs(): SweepTokensCall__Inputs {
    return new SweepTokensCall__Inputs(this);
  }

  get outputs(): SweepTokensCall__Outputs {
    return new SweepTokensCall__Outputs(this);
  }
}

export class SweepTokensCall__Inputs {
  _call: SweepTokensCall;

  constructor(call: SweepTokensCall) {
    this._call = call;
  }

  get tokenList(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SweepTokensCall__Outputs {
  _call: SweepTokensCall;

  constructor(call: SweepTokensCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UniswapV3MintCallbackCall extends ethereum.Call {
  get inputs(): UniswapV3MintCallbackCall__Inputs {
    return new UniswapV3MintCallbackCall__Inputs(this);
  }

  get outputs(): UniswapV3MintCallbackCall__Outputs {
    return new UniswapV3MintCallbackCall__Outputs(this);
  }
}

export class UniswapV3MintCallbackCall__Inputs {
  _call: UniswapV3MintCallbackCall;

  constructor(call: UniswapV3MintCallbackCall) {
    this._call = call;
  }

  get amount0Owed(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount1Owed(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class UniswapV3MintCallbackCall__Outputs {
  _call: UniswapV3MintCallbackCall;

  constructor(call: UniswapV3MintCallbackCall) {
    this._call = call;
  }
}

export class UnwrapWETH9Call extends ethereum.Call {
  get inputs(): UnwrapWETH9Call__Inputs {
    return new UnwrapWETH9Call__Inputs(this);
  }

  get outputs(): UnwrapWETH9Call__Outputs {
    return new UnwrapWETH9Call__Outputs(this);
  }
}

export class UnwrapWETH9Call__Inputs {
  _call: UnwrapWETH9Call;

  constructor(call: UnwrapWETH9Call) {
    this._call = call;
  }

  get amountMinimum(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UnwrapWETH9Call__Outputs {
  _call: UnwrapWETH9Call;

  constructor(call: UnwrapWETH9Call) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get params(): WithdrawCallParamsStruct {
    return changetype<WithdrawCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get removedLiquidity(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class WithdrawCallParamsStruct extends ethereum.Tuple {
  get key(): WithdrawCallParamsKeyStruct {
    return changetype<WithdrawCallParamsKeyStruct>(this[0].toTuple());
  }

  get recipient(): Address {
    return this[1].toAddress();
  }

  get shares(): BigInt {
    return this[2].toBigInt();
  }

  get amount0Min(): BigInt {
    return this[3].toBigInt();
  }

  get amount1Min(): BigInt {
    return this[4].toBigInt();
  }

  get deadline(): BigInt {
    return this[5].toBigInt();
  }
}

export class WithdrawCallParamsKeyStruct extends ethereum.Tuple {
  get pool(): Address {
    return this[0].toAddress();
  }

  get tickLower(): i32 {
    return this[1].toI32();
  }

  get tickUpper(): i32 {
    return this[2].toI32();
  }
}
