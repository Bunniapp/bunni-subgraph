type Bunni @entity {
  id: Bytes!                                                # the BunniHub address
  protocolFee: BigInt!                                      # the proportion of swap fees taken by Bunni
}

type BunniToken @entity {
  id: Bytes!                                                #
  name: String!                                             #
  symbol: String!                                           #
  address: Bytes!                                           #
  decimals: BigInt!                                         #
  precision: BigInt!                                        #

  pool: Pool!                                               # uniswap v3 Pool
  tickLower: BigInt!                                        # lower tick of the uniswap v3 position
  tickUpper: BigInt!                                        # upper tick of the uniswap v3 position
  liquidity: BigInt!                                        # current position liquidity

  bunniKey: Bytes!                                          # the hash of the bunni key
  positionKey: Bytes!                                       # the uniswap v3 position key

  collectedFeesToken0: BigInt!                              # the amount of token0 collected as protocol fees 
  collectedFeesToken1: BigInt!                              # the amount of token1 collected as protocol fees

  gauge: Gauge @derivedFrom(field: "bunniToken")            # Gauge associated with the BunniToken
}

type Gauge @entity {
  id: Bytes!                                                # the hashed address of the Gauge
  address: Bytes!                                           # the address of the Gauge
  bunniToken: BunniToken!                                   # the associated BunniToken

  bribes: [Bribe!]! @derivedFrom(field: "gauge")            # Bribes associated with the Gauge
}

type Bribe @entity {
  id: Bytes!                                                # bribeIdentifier
  gauge: Gauge!                                             # the associated Gauge
  proposal: Bytes!                                          # the hashed address of the associated Gauge
  bribeIdentifier: Bytes!                                   # the bribe identifier
  rewardIdentifier: Bytes!                                  # the reward identifier

  token: Bytes!                                             # the bribe token address
  amount: BigInt!                                           # the bribe amount
  deadline: BigInt!                                         # timestamp when the bribe ends
  briber: Bytes!                                            # the bribe creator
}

type Pool @entity {
  id: Bytes!                                                #
  fee: BigInt!                                              # fee tier
  tick: BigInt!                                             # current tick
  address: Bytes!                                           # pool address
  liquidity: BigInt!                                        # in range liquidity
  sqrtPriceX96: BigInt!                                     #

  token0: Bytes!                                            # token0 address
  token1: Bytes!                                            # token1 address
  token0Price: BigDecimal!                                  # token0 per token1
  token1Price: BigDecimal!                                  # token1 per token0

  totalValueLockedToken0: BigInt!                           #
  totalValueLockedToken1: BigInt!                           #
  totalVolumeToken0: BigInt!                                #
  totalVolumeToken1: BigInt!                                #
  totalFeesToken0: BigInt!                                  #
  totalFeesToken1: BigInt!                                  #

  bunniTokens: [BunniToken!]! @derivedFrom(field: "pool")   # BunniTokens associated with the Pool
}
